pipeline {
    agent {
        docker {
            image 'node:lts-buster-slim'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    
    environment {
        DOCKER_REGISTRY = 'aero1602' // Replace with your Docker registry URL
        DOCKER_IMAGE = 'jenkins-registry'   // Replace with your Docker image name
        EMAIL_RECIPIENT = 'arangarajan16.002@gmail.com'  // Replace with the recipient email address
         PATH = "/usr/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Arangarajan-Aero/simple-node-js-react-npm-app.git'
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        
        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
        }
        
        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }
stage('Print PATH') {
    steps {
        sh 'echo $PATH'
    }
}
        stage('Build Docker Image') {
            steps {
                script {
                    def appVersion = "${env.BUILD_ID}"
                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${appVersion} -f ../Dockerfile ."
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    // Use withDockerRegistry for handling Docker registry credentials
                    withDockerRegistry([credentialsId: 'Docker-hub-credentials']) {
                        sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_ID}"
                    }
                }
            }
        }
    }

    post {
        success {
            mail to: "${EMAIL_RECIPIENT}",
                 subject: "Build Successful: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The build was successful! You can see the build details here: ${env.BUILD_URL}"
        }
        failure {
            mail to: "${EMAIL_RECIPIENT}",
                 subject: "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                 body: "The build failed. Please check the details here: ${env.BUILD_URL}"
        }
    }
}
